{
  "_args": [
    [
      {
        "raw": "express-override",
        "scope": null,
        "escapedName": "express-override",
        "name": "express-override",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/Tanya/Desktop/peep_project_server"
    ]
  ],
  "_from": "express-override@latest",
  "_id": "express-override@0.1.9",
  "_inCache": true,
  "_location": "/express-override",
  "_phantomChildren": {},
  "_requested": {
    "raw": "express-override",
    "scope": null,
    "escapedName": "express-override",
    "name": "express-override",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/express-override/-/express-override-0.1.9.tgz",
  "_shasum": "5a151d502f80e9387c348d1b7ae2f1014862be1f",
  "_shrinkwrap": null,
  "_spec": "express-override",
  "_where": "/Users/Tanya/Desktop/peep_project_server",
  "author": {
    "name": "Kyohei Ueshiba"
  },
  "bin": {
    "eor": "./bin/eor"
  },
  "bugs": {
    "url": "https://github.com/KyoheiUeshiba/express-override/issues"
  },
  "dependencies": {
    "commander": "0.6.x",
    "klass": "1.2.x",
    "mkdirp": "0.3.0"
  },
  "description": "Express MVC Like Plugin",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "5a151d502f80e9387c348d1b7ae2f1014862be1f",
    "tarball": "https://registry.npmjs.org/express-override/-/express-override-0.1.9.tgz"
  },
  "homepage": "https://github.com/KyoheiUeshiba/express-override#readme",
  "keywords": [
    "Express",
    "MVC"
  ],
  "license": "BSD",
  "main": "index",
  "maintainers": [
    {
      "name": "Kyohei Ueshiba",
      "email": "kyohei.ueshiba@gmail.com"
    }
  ],
  "name": "express-override",
  "optionalDependencies": {},
  "readme": "# Express-Override\n      \n  [Express](https://github.com/visionmedia/express) の拡張プラグインです。(Version2.5.x & 3.x.x)\n  Expressをベースに新たにフレームワークを作成するのではなく、Expressのまま使用する為の最低限のライブラリ群です。\n  現在のバージョン0.1.xでは、\n\n  * routesで実行するモジュールのファイル分割 (handlers)\n  * 全handlersで使用出来るグローバルオブジェクトの提供\n  * [klass.js](https://github.com/ded/klass) の使用によるhandlers/modelsの継承\n\n  のみの機能です。\n\n\n## Installation\n  \n  基本仕様はexpressコマンドにより、アプリケーションのベースファイルが作成された後に実行される事を想定しています。\n  eorコマンドの引数にはexpressコマンドの引数と同じ物を指定すると、sampleファイルがすぐに使用出来る様になります。\n\n    $ npm install -g express-override \n\n## Quick Start\n\n### Initialize\n\n  \t$ eor [same options]\n    $ npm install -d\n\n  or\n\n  \t$ eor [same options]\n    $ npm install express-override\n\n### Run\n\n\t$ node eor-sample-app.js\n\n### Browser\n\n  \thttp://localhost:3000\n  \thttp://localhost:3000/hello\n  \n### Other\n\n  Expressのバージョンを指定する事でサンプルファイル(eor-sample-app.js)をExpressのバージョンに合わせて作成します。\n  デフォルトではVersion2。\n\n    $ eor -x 2\n\n  OR\n\n    $ oer -x 3\n\n## Example\n\n/handlers/SampleHandlers.js\n``` js\nmodule.exports = function(eor){\n  return eor.define(\"Application\").extend(function(){\n    this.title = \"Express Override\";\n  })\n  .methods({\n    index : function(req, res) {\n      var sampleModel = eor.getModule(\"Sample\", \"Model\");\n      if(sampleModel.index()){\n        res.render('index', { title: this.title })\n      }else{\n        res.render('index', { title: this.title, error_message : \"ErrorCode => -1111\"});\n      }\n    },\n\n    hello : function(req, res) {\n      res.render('index', { title: eor.shared.name })\n    }\n  })\n};\n```\n\n/models/SampleModel.js\n``` js\nmodule.exports = function(eor){\n  return eor.define(\"Application\", \"Model\").extend(function(){\n    this.myName = \"SampleModel\";\n  })\n  .methods({\n    index : function(){\n      return this.myName == \"SampleModel\";\n    }\n  });\n};\n```\n\n## 今後のアップデート方針\n\n  Expressを使用したアプリケーションで車輪の再開発を防ぐ事を目的としたscaffold機能や、\n  Expressのバージョン互換吸収等を目的に更新して行きます。",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/KyoheiUeshiba/express-override.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.1.9"
}
